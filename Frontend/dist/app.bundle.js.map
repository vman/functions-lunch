{"version":3,"sources":["webpack:///./src/app.tsx","webpack:///./src/components/Dashboard.tsx","webpack:///./src/api/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,oCAA+B;AAC/B,uCAAsC;AAEtC,2CAAmD;AAEnD,QAAQ,CAAC,MAAM,CAAC,oBAAC,qBAAS,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACL9E,oCAA+B;AAC/B,mCAA8B;AAI9B;IAA+B,6BAAiD;IAE9E,mBAAY,KAAsB;QAAlC,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;;IAC7B,CAAC;IAEM,0BAAM,GAAb;QACE,MAAM,CAAC,6BAAK,EAAE,EAAC,WAAW,IACvB,IAAI,CAAC,KAAK,CAAC,KAAK;YACf;;gBAAmB,IAAI,CAAC,KAAK,CAAC,KAAK;oBAAU,CAE3C,CAAC;IACT,CAAC;IAED,qCAAiB,GAAjB;QAAA,iBAMC;QALC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,MAAc;YACxC,KAAI,CAAC,QAAQ,CAAC;gBACZ,KAAK,EAAE,MAAM,CAAC,KAAK;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACH,gBAAC;AAAD,CAAC,CAtB8B,KAAK,CAAC,SAAS,GAsB7C;AAtBY,8BAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLtB,iBAmCA;;AAnCA,aAA0B,GAAW;;;YACjC,sBAAO,aAAa,CAAC,GAAG,EAAE,KAAK,CAAC,EAAC;;;CACpC;AAFD,kBAEC;AAED,cAA2B,GAAW,EAAE,KAAc;;;YAClD,sBAAO,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAC;;;CAC5C;AAFD,oBAEC;AAED,IAAM,aAAa,GAAG,UAAO,GAAW,EAAE,OAAe,EAAE,KAAc;;;;;gBAC/D,UAAU,GAAG,IAAI,OAAO,CAAC;oBAC3B,eAAe,EAAE,qCAAqC;oBACtD,QAAQ,EAAE,UAAU;oBACpB,cAAc,EAAE,iCAAiC;oBACjD,UAAU,EAAE,MAAM;iBACrB,CAAC,CAAC;gBAEG,OAAO,GAAgB;oBACzB,6BAA6B;oBAC7B,OAAO,EAAE,UAAU;oBACnB,MAAM,EAAE,OAAO;iBAClB,CAAC;gBAEF,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACR,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;gBACzB,CAAC;gBAC0B,qBAAM,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC;;gBAA9C,QAAQ,GAAa,SAAyB;qBAEhD,QAAQ,CAAC,EAAE,EAAX,wBAAW;gBACJ,qBAAM,QAAQ,CAAC,IAAI,EAAE;oBAA5B,sBAAO,SAAqB,EAAC;oBAGX,qBAAM,QAAQ,CAAC,IAAI,EAAE;;gBAAjC,SAAS,GAAG,SAAqB;gBACvC,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;;;KAElC,CAAC","file":"app.bundle.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { Dashboard } from \"./components/Dashboard\";\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById(\"dashboardContainer\"));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--1!./src/app.tsx","import * as React from \"react\";\r\nimport * as api from \"../api\";\r\nexport interface IDashboardState { place: string; }\r\nexport interface IDashboardProps { }\r\nexport interface IPlace { place: string; }\r\nexport class Dashboard extends React.Component<IDashboardProps, IDashboardState> {\r\n\r\n  constructor(props: IDashboardProps) {\r\n    super(props);\r\n    this.state = { place: \"\" };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return <div id=\"dashboard\">\r\n      {this.state.place &&\r\n        <label> How about {this.state.place}?</label>\r\n      }\r\n    </div>;\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    api.get(\"/api/Place\").then((result: IPlace) => {\r\n      this.setState({\r\n        place: result.place\r\n      });\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--1!./src/components/Dashboard.tsx","export async function get(url: string): Promise<any> {\r\n    return fetchInternal(url, \"GET\");\r\n}\r\n\r\nexport async function post(url: string, _body?: string): Promise<any> {\r\n    return fetchInternal(url, \"POST\", _body);\r\n}\r\n\r\nconst fetchInternal = async (url: string, _method: string, _body?: string) => {\r\n    const reqHeaders = new Headers({\r\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\r\n        \"Pragma\": \"no-cache\",\r\n        \"content-type\": \"application/json; charset=utf-8\",\r\n        \"dataType\": \"json\"\r\n    });\r\n\r\n    const reqInit: RequestInit = {\r\n        //credentials: \"same-origin\",\r\n        headers: reqHeaders,\r\n        method: _method\r\n    };\r\n\r\n    if (_body) {\r\n        reqInit.body = _body;\r\n    }\r\n    const response: Response = await fetch(url, reqInit);\r\n\r\n    if (response.ok) {\r\n        return await response.json();\r\n    }\r\n    else {\r\n        const errorText = await response.text();\r\n        throw new Error(errorText);\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--1!./src/api/index.ts"],"sourceRoot":""}